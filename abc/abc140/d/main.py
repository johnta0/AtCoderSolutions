"""
幸福な人(HP)でなく不幸な人(UHP)を数える。最終的にHPは HP = N - UHP で求めることができる。
以下のような並びを考える。

    L RR LLLL R L RRR L R LLLL

同じ記号ごとにスペースで区切っている。この中で不幸な人は、両端にいる2人と、スペースで
区切られたグループに付き1人である。このようにして不幸な人の人数を数えることができた。

また、(l, r) の人々を180度回転することによって、回転するグループ両端以外の幸福な人（不幸な人）
の人数は変化しない。両端の幸不幸が変化するのみである。

境界以外を l or r に選んだとしても、幸不幸の数は変化しない。
両端でない facing, unfacing な境界をそれぞれ l, r に選ぶと、
幸福な人を2人増やすことができる。

k が十分に大きい場合、十分な数の操作を行うことによって幸福な人を最大 N - 1 人に
することができる。
"""


n, k = map(int, input().split())
s = input()

hpp = 0
for i in range(n - 1):
    if s[i] == s[i + 1]:
        hpp += 1

# k 回の操作で幸福な人を 2k 人増やすことができる
hpp += 2 * k

# N - 1 人 or k 回で N - 1 人に満たない場合は k 回で幸福にした人の数 + もともと幸福な人。
print(min(n - 1, hpp))

